#!/usr/bin/env bash
#
# SPDX-FileCopyrightText: 2018 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -e

# For the check step concourse will set the following environment variables:
# SOURCE_PATH - path to component repository root directory.

if [[ -z "${SOURCE_PATH}" ]]; then
  export SOURCE_PATH="$(readlink -f "$(dirname ${0})/..")"
else
  export SOURCE_PATH="$(readlink -f ${SOURCE_PATH})"
fi

source "$SOURCE_PATH/build/setupenv.src"

ignore=(
   "receiver name should be a reflection of its identity; don't use generic names such as \"this\" or \"self\""
   "should not use basic type string as key in context.WithValue"
   "context.Context should be the first parameter of a function"
   "if block ends with a return statement, so drop this else and outdent its block"
   "should not use dot imports"
   "*Id.*ID"
   "don't use ALL_CAPS in Go names; use CamelCase"
   "don't use underscores in Go names"
   "by other packages, and that stutters; consider calling this"
   ": exported "
)

# Install Golint (linting tool).
GO111MODULE=on go get -u golang.org/x/lint

###############################################################################

join_by() { local IFS="$1"; shift; echo "$*"; }

PACKAGES="$(go list -e ./... | grep -vE '/tmp/|/vendor/')"
LINT_FOLDERS="$(echo ${PACKAGES} | sed "s|$GITPROVIDER/$PROJECT|.|g")"

# Execute static code checks.
#go vet ${PACKAGES}

# Execute automatic code formatting directive.
go fmt ${PACKAGES}

# Execute lint checks.
hack/lint -vacs  ${LINT_FOLDERS}
