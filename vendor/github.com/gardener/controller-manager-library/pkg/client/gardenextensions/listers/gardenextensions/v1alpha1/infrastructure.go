// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gardener/controller-manager-library/pkg/apis/gardenextensions/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InfrastructureLister helps list Infrastructures.
type InfrastructureLister interface {
	// List lists all Infrastructures in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Infrastructure, err error)
	// Infrastructures returns an object that can list and get Infrastructures.
	Infrastructures(namespace string) InfrastructureNamespaceLister
	InfrastructureListerExpansion
}

// infrastructureLister implements the InfrastructureLister interface.
type infrastructureLister struct {
	indexer cache.Indexer
}

// NewInfrastructureLister returns a new InfrastructureLister.
func NewInfrastructureLister(indexer cache.Indexer) InfrastructureLister {
	return &infrastructureLister{indexer: indexer}
}

// List lists all Infrastructures in the indexer.
func (s *infrastructureLister) List(selector labels.Selector) (ret []*v1alpha1.Infrastructure, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Infrastructure))
	})
	return ret, err
}

// Infrastructures returns an object that can list and get Infrastructures.
func (s *infrastructureLister) Infrastructures(namespace string) InfrastructureNamespaceLister {
	return infrastructureNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InfrastructureNamespaceLister helps list and get Infrastructures.
type InfrastructureNamespaceLister interface {
	// List lists all Infrastructures in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Infrastructure, err error)
	// Data retrieves the Infrastructure from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Infrastructure, error)
	InfrastructureNamespaceListerExpansion
}

// infrastructureNamespaceLister implements the InfrastructureNamespaceLister
// interface.
type infrastructureNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Infrastructures in the indexer for a given namespace.
func (s infrastructureNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Infrastructure, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Infrastructure))
	})
	return ret, err
}

// Data retrieves the Infrastructure from the indexer for a given namespace and name.
func (s infrastructureNamespaceLister) Get(name string) (*v1alpha1.Infrastructure, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("infrastructure"), name)
	}
	return obj.(*v1alpha1.Infrastructure), nil
}
