#!/usr/bin/env bash
#
# SPDX-FileCopyrightText: 2018 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -e

# For the build step concourse will set the following environment variables:
# SOURCE_PATH - path to component repository root directory.
# BINARY_PATH - path to an existing (empty) directory to place build results into.

if [[ -z "${SOURCE_PATH}" ]]; then
  export SOURCE_PATH="$(readlink -f "$(dirname ${0})/..")"
else
  export SOURCE_PATH="$(readlink -f "${SOURCE_PATH}")"
fi

source "$SOURCE_PATH/build/setupenv.src"

###############################################################################

VERSION_FILE="$(readlink -f "${SOURCE_PATH}/VERSION")"
VERSION="$(cat "${VERSION_FILE}")"

# If no LOCAL_BUILD environment variable is set, we configure the `go build` command
# to build for linux OS, amd64 architectures and without CGO enablement.
echo "running code generator..."
"$SOURCE_PATH/hack/update-codegen.sh"
echo "running build..."

if [[ -z "$LOCAL_BUILD" ]]; then
  CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -a \
    -o ${BINARY_PATH}/rel/$EXE \
    -ldflags "-w -X $PKGPATH/pkg/version.Version=${VERSION}" \
    cmd/$EXE/*.go


# If the LOCAL_BUILD environment variable is set, we simply run `go build`.
else
  go build \
    -o ${BINARY_PATH}/$EXE \
    -ldflags "-w -X $PKGPATH/pkg/version.Version=${VERSION}" \
    cmd/$EXE/*.go

fi
